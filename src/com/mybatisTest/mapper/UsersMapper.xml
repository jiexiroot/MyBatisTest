<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatisTest.mapper.UsersMapper">
    <insert id="registerByWhere">
        insert into users(LoginId,LoginPwd,Name,Address,Phone,Mail,UserRoleId,UserStateId) values
         (#{loginId},#{loginPwd},#{name},#{address},#{phone},#{mail}
         <trim prefix="," prefixOverrides=",">
             <choose>
                <when test="userRoleId!=null  and userRoleId==0">
                    1,
                </when>
                <when test="userRoleId!=null  and userRoleId!=0">
                    #{userRoleId},
                </when>
             </choose>
             <choose>
                 <when test="userStateId!=null  and userStateId==0">
                     1
                 </when>
                 <when test="userStateId!=null  and userStateId!=0">
                     #{userStateId}
                 </when>
             </choose>
         </trim>
         );
    </insert>
    <!-- 配置映射的SQL语句 -->
    <select id="doLogin" parameterType="user" resultType="Integer">
	   		select count(*) from users where
	   		<choose>
	   		    <when test="loginId!=null and loginId!=''">
                    loginId=#{loginId}
                </when>
                <when test="loginPwd!=null and loginPwd!=''">
                    loginPwd=#{loginPwd}
                </when>
                <otherwise>
                    1=1
                </otherwise>
            </choose>
   </select>

    <select id="doRegister" statementType="CALLABLE">
          {call sp_register(
             #{user.loginId,mode=IN,jdbcType=VARCHAR},
             #{user.loginPwd,mode=IN,jdbcType=VARCHAR},
             #{user.name,mode=IN,jdbcType=VARCHAR},
             #{user.address,mode=IN,jdbcType=VARCHAR},
             #{user.phone,mode=IN,jdbcType=VARCHAR},
             #{user.mail,mode=IN,jdbcType=VARCHAR},
             #{flag,mode=OUT,jdbcType=INTEGER})}
    </select>
    <select id="selectByFuzzy" resultType="user">
        select <include refid="usersColumns"/> from users where ${columnName} like concat('%',#{columnValue},'%')
    </select>
    <update id="editByColumn">
        update users set ${columnName}=#{modifiedValue} where  ${columnName}=#{originalValue}
    </update>
    <update id="updateByPassword">
        update users
        <set>
            <if test="Oldpaword!=null || usname!=null">
                loginPwd=#{Newpaword}
                <where>
                    loginPwd=#{Oldpaword} and loginId=#{usname}
                </where>
            </if>
        </set>
    </update>
    <sql id="usersColumns">
        loginId,name,address,phone,mail
    </sql>
    <select id="doSelectBySQL" resultType="com.mybatisTest.pojo.User">
        select * from users where 1=1
        <if test="searchValue !=null and searchValue!=''">
           and LoginId=#{searchValue}
        </if>
    </select>
    <select id="doLoginByCall" resultType="java.lang.Integer" statementType="CALLABLE">
        {call sp_login(
        #{loginId,mode=IN,jdbcType=VARCHAR},
        #{loginPwd,mode=IN,jdbcType=VARCHAR})}
    </select>

    <select id="queryByif" resultType="com.mybatisTest.pojo.User">
        <bind name="loginId_pattern" value="'%'+loginId+'%'"/>
        select * from users
        <where>
            <if test="loginId !=null and loginId!=''">
                and LoginId like #{loginId_pattern}
            </if>
            <if test="loginPwd !=null and loginPwd!=''">
                and LoginPwd like concat('%',#{loginPwd},'%')
            </if>
            <if test="name !=null and name!=''">
                and Name like concat('%',#{name},'%')
            </if>
            <if test="address !=null and address!=''">
                and Address like concat('%',#{address},'%')
            </if>
            <if test="phone !=null and phone!=''">
                and Phone like concat('%',#{phone},'%')
            </if>
            <if test="mail !=null and mail!=''">
                and Mail like concat('%',#{mail},'%')
            </if>
        </where>
    </select>

</mapper>